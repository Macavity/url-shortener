name: Build

on:
  pull_request:
    branches: [ main, develop ]

jobs:
  lint:
    name: Lint Frontend
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [ 16.x ]

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache
        id: cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.npm
            ~/.cache/Cypress
            ./node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}

      - name: Install packages
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm install

      - name: Lint
        run: |
          npm run lint

  test-unit:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    needs: lint

    strategy:
      matrix:
        node-version: [ 16.x ]

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Create Cache
        id: cache
        uses: actions/cache@v2
        with:
          path: | 
            ~/.npm
            ~/.cache/Cypress
            ./node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}

      - name: Install packages
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm install

      - name: Tests
        run: |
          npm run test:unit

  test-e2e:
    name: Run E2E Tests
    runs-on: ubuntu-latest
    needs: lint

    strategy:
      matrix:
        node-version: [ 16.x ]
    env:
      APP_PORT: 3000
    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache
        id: cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.npm
            ~/.cache/Cypress
            ./node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}

      - name: Install packages
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm install

      # Install NPM dependencies, cache them correctly
      # and run all Cypress tests
      - name: Cypress run
        uses: cypress-io/github-action@v2
        with:
          build: npm run build
          start: npm start
